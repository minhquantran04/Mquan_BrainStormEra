@model Dictionary<string, (string CourseName, List<BrainStormEra.Views.Profile.UserDetailsViewModel> Learners)>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Learners by Course</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-wEmeIV1mKuiNp12S5ZgFv3qdn7mQbso5mZlDR5A8P75jph8qf7ST8f7nU5V0WLFp" crossorigin="anonymous"
        defer></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"
        defer></script>
    <link rel="stylesheet" href="~/css/Profile/InstructorProfile.css">
    <link rel="stylesheet" href="~/css/HomePage/landing_page.css">
    <link rel="stylesheet" href="~/css/base.css">
    <link rel="icon" href="~/lib/img/BrainStormEra_logo.png" type="image/x-icon">
</head>

<body>

    @await Html.PartialAsync("~/Views/Shared/Instructor/Header/_Header.cshtml")

    <main class="container mt-5">
        <h2>Learners by Course</h2>

        @foreach (var course in Model)

        {
            <div class="course-container">
                <div class="course-header" onclick="toggleLearnersList('learners-@course.Key')">
                    Course: @course.Value.CourseName
                </div>
                <div id="learners-@course.Key" class="learners-list" style="display:none;">
                    @foreach (var learner in course.Value.Learners)
                    {
                        <div class="learner-item d-flex align-items-center"
                            onclick="showLearnerDetails('@learner.UserId', '@course.Key')">
                            <img src="@learner.UserPicture" alt="User Picture" class="rounded-circle me-2"
                                style="width: 40px; height: 40px;">
                            @(string.IsNullOrEmpty(learner.FullName) ? "Unnamed" : learner.FullName)
                        </div>

                    }
                </div>
            </div>
        }
    </main>

    <!-- Learner Details Modal -->
    <div class="modal fade learner-details-modal" id="learnerDetailsModal" tabindex="-1"
        aria-labelledby="learnerDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="learnerDetailsModalLabel">Learner Information</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex">
                    <div class="user-info">
                        <p><strong>Full Name:</strong> <span id="modalFullName"></span></p>
                        <p><strong>Email:</strong> <span id="modalEmail"></span></p>
                        <p><strong>Date of Birth:</strong> <span id="modalDOB"></span></p>
                        <p><strong>Gender:</strong> <span id="modalGender"></span></p>
                        <p><strong>Phone Number:</strong> <span id="modalPhoneNumber"></span></p>
                        <p><strong>Address:</strong> <span id="modalAddress"></span></p>
                        <h6>Completed Courses for this Learner</h6>
                        <ul id="completedCoursesList"></ul>
                    </div>
                    <div class="user-picture">
                        <img id="learnerPicture" src="default-avatar.png" alt="Learner Picture">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Certificate Modal for Instructor -->
    <div class="modal fade certificate-modal" id="certificateModal" tabindex="-1"
        aria-labelledby="certificateModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="certificateModalLabel">Certificate of Completion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex justify-content-center align-items-center">
                    <div class="certificate-content p-4 text-center rounded shadow-sm bg-white" id="certificateArea">
                        <h4 class="certificate-header text-uppercase mb-2">BrainStormEra Academy</h4>
                        <h2 class="certificate-title mb-3">Certificate of Completion</h2>
                        <p class="certificate-body">This certificate is awarded to</p>
                        <h3 class="certificate-username mb-1" id="certificateUserName"></h3>
                        <p class="mb-2">
                            has successfully completed the online course "<span id="certificateCourseName"></span>"
                            specialization on <span id="certificateDate"></span>
                        </p>
                        <div class="certificate-logo my-4">
                            <img src="~/lib/img/Login/BrainStormEra_logo.png" alt="Logo" class="img-fluid">
                        </div>
                        <p class="certificate-footer text-muted">Verified by BrainStormEra</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
        crossorigin="anonymous"></script>
    <script>
        function toggleLearnersList(id) {
            const list = document.getElementById(id);
            list.style.display = list.style.display === 'none' ? 'block' : 'none';
        }

        function showLearnerDetails(userId, courseId) {
            fetch(`/api/users/${userId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('modalFullName').innerText = data.fullName || 'N/A';
                    document.getElementById('modalEmail').innerText = data.userEmail || 'N/A';
                    document.getElementById('modalDOB').innerText = data.dateOfBirth || 'N/A';
                    document.getElementById('modalGender').innerText = data.gender || 'N/A';
                    document.getElementById('modalPhoneNumber').innerText = data.phoneNumber || 'N/A';
                    document.getElementById('modalAddress').innerText = data.userAddress || 'N/A';
                    document.getElementById('learnerPicture').src = data.userPicture || 'default-avatar.png';
                    loadCompletedCourses(userId, courseId);

                    const learnerDetailsModal = new bootstrap.Modal(document.getElementById('learnerDetailsModal'));
                    learnerDetailsModal.show();
                })
                .catch(error => console.error('Error fetching learner details:', error));
        }

        function loadCompletedCourses(userId, courseId) {
            fetch(`/api/users/${userId}/completed-courses`)
                .then(response => response.json())
                .then(courses => {
                    const courseList = document.getElementById('completedCoursesList');
                    courseList.innerHTML = '';

                    const filteredCourses = courses.filter(course => course.courseId === courseId);
                    if (filteredCourses.length === 0) {
                        courseList.innerHTML = '<li>No completed courses for this learner in this course.</li>';
                    } else {
                        filteredCourses.forEach(course => {
                            const courseItem = document.createElement('li');
                            courseItem.innerHTML = `
                                        <strong>${course.courseName}</strong> -
                                        Completed on ${new Date(course.completedDate).toLocaleDateString()}
                                        <a href="javascript:void(0);" onclick="viewCertificate('${userId}', '${course.courseId}')">View Certificate</a>
                                    `;
                            courseList.appendChild(courseItem);
                        });
                    }
                })
                .catch(error => console.error('Error loading completed courses:', error));
        }

        function viewCertificate(userId, courseId) {
            fetch(`/Certificate/CertificateDetails?userId=${userId}&courseId=${courseId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('certificateUserName').innerText = data.userName || 'N/A';
                    document.getElementById('certificateCourseName').innerText = data.courseName || 'N/A';
                    document.getElementById('certificateDate').innerText = data.completedDate
                        ? new Date(data.completedDate).toLocaleDateString()
                        : 'N/A';

                    const certificateModal = new bootstrap.Modal(document.getElementById('certificateModal'));
                    certificateModal.show();
                })
                .catch(error => console.error('Error loading certificate:', error));
        }
    </script>
</body>
@await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")

</html>
