@*
For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model BrainStormEra.Views.Home.HomePageLearnerViewModel


@inject IHttpContextAccessor HttpContextAccessor
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BrainStormEra</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="icon" href="~/lib/img/BrainStormEra_logo.png" type="image/x-icon">
    <link rel="stylesheet" href="~/css/base.css">
    <link rel="stylesheet" href="~/css/HomePage/homePage.css">
    <link rel="stylesheet" href="~/css/HomePage/landing_page.css">
    <link href="~/css/Notification/notification-modal.css" rel="stylesheet" />
    <link href="~/css/HomePage/Learner/HomePageLearner.css" rel="stylesheet" />
</head>

<body>
    @await Html.PartialAsync("~/Views/Shared/Learner/Header/_Header.cshtml")


    @await Html.PartialAsync("~/Views/Home/Notification/_NotificationsModal.cshtml", Model.Notifications)
    @await Html.PartialAsync("~/Views/Home/Notification/addNotificationModal.cshtml", Model.Notifications)
    @await Html.PartialAsync("~/Views/Home/Notification/editNotificationModal.cshtml", Model.Notifications)

    <div class="container mt-5">
        <!-- Header Section -->
        <div class="header-section mb-5 w-100 d-flex">
            <h1>
                Hello <span style="color: var(--orange);">@Model.FullName</span>, Welcome to BrainStormEra. Let's study
                now!
            </h1>
            <div class="column col-avatar">
                <img src="~/lib/img/Login/BrainStormEra_logo.png" alt="Profile Picture" class="profile-pic"> @*
                @Model.UserPicture *@
                <div class="header-content">
                    <div class="info">
                        <h1>Ranking: @Model.Ranking</h1>
                        <h1>Total Courses Enrolled: @Model.TotalCoursesEnrolled</h1>
                    </div>
                </div>
            </div>
            <div class="column col-course">
                <div class="mt-2">Achievements:</div>
                <div class="d-flex align-items-center mt-1 achievementPic">
                    @if (Model.Achievements != null && Model.Achievements.Count > 0)
                    {
                        @foreach (var achievement in Model.Achievements)
                        {
                            <div class="achievement-item me-3">
                                <img src="@achievement.AchievementIcon" alt="@achievement.AchievementName" class="img-fluid"
                                    style="width: 30px;">
                                <span>@achievement.AchievementName</span>
                            </div>
                        }
                    }
                    else
                    {
                        <p>You currently have no achievements.</p>
                    }
                </div>
            </div>
            <div class="column col-ranking">
            </div>

        </div>


        <!-- Filters Section -->
        <div class="container">
            <div class="filters mb-3">
                <div class="categories d-flex justify-content-start p-2 rounded" style="font-size: 2.2rem;">
                    Top 4 Recommend Course
                </div>
            </div>
        </div>


        <div class="row justify-content-center mb-5">
            @foreach (var c in Model.RecommendedCourses)
            {

                <div class="col-md-2 col-sm-6 mb-4">
                    <a href="javascript:void(0);" onclick="viewDetailCourse('@c.CourseId')">

                        <div class="card course-card h-100">
                            <img src="@c.CoursePicture" class="card-img-top" alt="Course Image">
                            <div class="card-body">
                                <h5 class="card-title">@c.CourseName</h5>
                                <p class="card-text">Price: @c.Price ₫</p>
                                <p class="card-text">By @c.CreatedBy</p>
                                <div class="rating">
                                    <span class="stars" data-rating="@c.StarRating"></span>
                                </div>
                                <div>
                                    <i class="fas fa-tags me-2"></i> Categories:
                                    @foreach (var category in c.CourseCategories)
                                    {
                                        <span class="badge bg-primary me-1">@category.CourseCategoryName</span>
                                    }
                                </div>

                            </div>
                        </div>
                    </a>

                </div>
            }
        </div>

    </div>


    @await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/Notification/notification.js"></script>
    <script>
        // Hàm chuyển đến trang chi tiết khóa học
        function viewDetailCourse(courseId) {
            // Lưu courseId vào cookie
            document.cookie = "CourseId=" + courseId + "; path=/";

            // Chuyển hướng đến trang chi tiết khóa học với courseId
            window.location.href = "@Url.Action("CourseDetail", "Course")";
        }

        // Sử dụng $(document).ready() để chắc chắn rằng mã sẽ được thực thi khi tài liệu đã sẵn sàng
        $(document).ready(function () {
            // Hiển thị đánh giá sao cho các khóa học
            const starElements = document.querySelectorAll('.stars');
            starElements.forEach(starElement => {
                const rating = parseInt(starElement.getAttribute('data-rating'));
                starElement.innerHTML = '★★★★★'.split('').map((star, index) => {
                    return `<span style="color: ${index < rating ? '#ff9800' : '#ccc'}">${star}</span>`;
                }).join('');
            });

            // Xử lý khi mở modal thông báo
            $('#notificationsModal').on('shown.bs.modal', function () {
                $.get('@Url.Action("Notifications", "Notification")', function (data) {
                    // Cập nhật nội dung của modal-body bằng dữ liệu trả về
                    $('#notificationsModal .modal-body').html($(data).find('.modal-body').html());
                    console.log('User Role:', '@ViewBag.UserRole');
                    console.log('User id:', '@ViewBag.UserId');
                });
            });

            // Xử lý khi nhấn nút thêm thông báo
            $(document).on('click', '.add-notification', function () {
                console.log('Add Notification button clicked');
                $('#notificationsModal').modal('hide');
                $('#addNotificationModal').modal('show');
            });
        });

        // Hàm xác nhận đăng xuất
        function confirmLogout() {
            var result = confirm("Are you sure you want to logout?");
            if (result) {
                window.location.href = '@Url.Action("Logout", "Login")';
            }
        }
    </script>

</body>

</html>