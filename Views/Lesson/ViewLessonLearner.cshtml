@model BrainStormEra.Models.Lesson

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">

    <link rel="stylesheet" href="~/css/base.css" />
    <link rel="stylesheet" href="~/css/Lesson/ViewLessonLearner.css" />
    <link rel="stylesheet" href="~/css/HomePage/landing_page.css" />
    <link rel="icon" href="~/lib/img/BrainStormEra_logo.png" type="image/x-icon">
    <title>Lesson</title>
</head>

<body>
    @await Html.PartialAsync("~/Views/Shared/Learner/Header/_Header.cshtml")
    @await Html.PartialAsync("~/Views/Shared/Chatbot/Chatbot.cshtml")
    <div class="container-fluid content-wrapper" style="margin-top: 50px;">
        @{
            var lessons = ViewBag.Lessons as IEnumerable<BrainStormEra.Models.Lesson>;
            var chapters = ViewBag.Chapters as IEnumerable<BrainStormEra.Models.Chapter>;
            var completedLessons = ViewBag.CompletedLessons as List<string> ?? new List<string>();
        }

        <!-- Sidebar -->
        <nav class="sidebar">
            <h3> <i class="fas fa-bars"></i> Menu</h3>
            <div class="accordion" id="chapterAccordion">
                @if (chapters != null && lessons != null)
                {
                    @foreach (var chapter in chapters)
                    {
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="heading@chapter.ChapterId">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@chapter.ChapterId" aria-expanded="false" aria-controls="collapse@chapter.ChapterId">
                                    @chapter.ChapterName
                                </button>
                            </h2>
                            <div id="collapse@chapter.ChapterId" class="accordion-collapse collapse" aria-labelledby="heading@chapter.ChapterId" data-bs-parent="#chapterAccordion">
                                <div class="accordion-body">
                                    <ul class="list-unstyled">
                                        @foreach (var lesson in lessons.Where(l => l.ChapterId == chapter.ChapterId))
                                        {
                                            <li>
                                                <a href="#" class="lesson-link" data-lesson-id="@lesson.LessonId">
                                                    <i class="lesson-icon @(completedLessons.Contains(lesson.LessonId) ? "bi bi-check-circle text-success" : (lesson.LessonTypeId == 1 ? "bi bi-play-circle" : "bi bi-book"))"></i> @lesson.LessonName
                                                </a>
                                                <hr />
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No chapters or lessons available.</p>
                }
            </div>
        </nav>

        <!-- Main content for Lesson -->
        <div class="main-content" id="lesson-content">
            <!-- Breadcrumb -->
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("CourseDetail", "Course")">@ViewBag.CourseName</a>
                    </li>
            </nav>

            <h2 id="lesson-title">@Model.LessonName</h2>
            <div id="lesson-description">@Model.LessonDescription</div>

            <!-- Content area based on LessonTypeId -->
            <div id="lesson-media">
                @if (Model.LessonTypeId == 1)
                {
                    <iframe width="560" height="800" src="@Model.LessonContent" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                }
                else if (Model.LessonTypeId == 2)
                {
                    <iframe width="100%" height="100%" src="@Model.LessonContent" type="application/pdf" frameborder="0"></iframe>
                }
                else
                {
                    <p>No content available for this lesson.</p>
                }
            </div>

            <!-- Mark as Completed Button -->
            <button id="markCompletedButton" class="btn btn-primary btn-lg mt-3 float-end">Mark as Completed</button>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            function loadLessonContent(lessonId) {
                $.ajax({
                    url: '@Url.Action("ViewLessonLearner", "Lesson")',
                    type: 'GET',
                    data: { lessonId: lessonId },
                    success: function (response) {
                        $('#lesson-title').text(response.lessonName);
                        $('#lesson-description').text(response.lessonDescription);

                        const contentHTML = response.lessonTypeId == 1
                            ? `<iframe width="100%" height="500" src="${response.lessonContent}" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`
                            : `<iframe width="100%" height="500" src="${response.lessonContent}" type="application/pdf" frameborder="0"></iframe>`;

                        $('#lesson-media').html(contentHTML);

                        $('#markCompletedButton').text(response.isCompleted ? '✓ Completed' : 'Mark as Completed')
                            .toggleClass('btn-success', response.isCompleted)
                            .prop('disabled', response.isCompleted);

                        if (!response.isCompleted) {
                            $('#markCompletedButton').off('click').on('click', function () {
                                markAsCompleted(lessonId);
                            });
                        }
                    }
                });
            }


            function markAsCompleted(lessonId) {
                $.ajax({
                    url: '@Url.Action("MarkLessonCompleted", "Lesson")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ lessonId: lessonId }),
                    success: function (response) {
                        if (response.success) {

                            $('#markCompletedButton').text('✓ Completed').addClass('btn-success').prop('disabled', true);


                            $(`.lesson-link[data-lesson-id="${lessonId}"] .lesson-icon`)
                                .removeClass('bi-play-circle bi-book')
                                .addClass('bi-check-circle text-success');
                        } else {
                            alert(response.message || "Failed to mark lesson as completed.");
                        }
                    },
                    error: function () {
                        alert("An error occurred while marking the lesson as completed.");
                    }
                });
            }

            $('.lesson-link').click(function (e) {
                e.preventDefault();
                const lessonId = $(this).data('lesson-id');
                document.cookie = "LessonId=" + lessonId + ";path=/";
                loadLessonContent(lessonId);
            });


            loadLessonContent('@Model.LessonId');
        });
    </script>
</body>
</html>
